---
name: Trivy

permissions: read-all

on:
  workflow_call:
    inputs:
      output_prefix:
        description: 'Prefix to add to output artifacts'
        required: false
        default: ''
        type: string

jobs:
  scan:
    runs-on: [self-hosted, linux, docker]
    steps:

      - name: Cleanup workspace
        run: sudo rm -rf ..?* .[!.]* *

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          path: source

      - name: Pull docker image
        run: docker pull aquasec/trivy:0.48.3

      - name: Create output location
        run: |
          mkdir artifact
          echo "Trivy Report" > artifact/trivy.txt

      - name: Scan
        run: |
          docker run \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $HOME/Library/Caches:/root/.cache/ \
            -v $(pwd):/work \
            -w /work \
            --attach stderr --attach stdout \
            aquasec/trivy:0.51.1 \
            fs \
              --exit-code 1 \
              --list-all-pkgs \
              . >> artifact/trivy.txt

      - name: Scan for SDL Evidence
        if: (success() || failure())
        run: |
          docker run \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $HOME/Library/Caches:/root/.cache/ \
            -v $(pwd):/work \
            -w /work \
            --attach stderr --attach stdout \
            aquasec/trivy:0.51.1 \
            fs \
              --exit-code 1 \
              --list-all-pkgs \
              --format template \
              --template "@/work/source/.github/workflows/trivy/csv.tpl" \
              --output artifact/trivy-report.csv \
              .

      - name: Lint Dockerfiles for SDL Evidence
        if: (success() || failure())
        run: |
          docker run \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v $HOME/Library/Caches:/root/.cache/ \
          -v $(pwd):/work \
          -w /work \
          --attach stderr --attach stdout \
          aquasec/trivy:0.51.1 \
            --ignorefile source/.trivyignore.yaml \
            --format table --output artifact/ct222-report.txt \
            config source

          docker run \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v $HOME/Library/Caches:/root/.cache/ \
          -v $(pwd):/work \
          -w /work \
          --attach stderr --attach stdout \
          aquasec/trivy:0.51.1 \
            --ignorefile source/.trivyignore.yaml \
            --format json --output artifact/ct222-report.json \
            --exit-code 1 \
            config source

      - name: Scan for SPDX for SBOM
        if: (success() || failure())
        run: |
          docker run \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $HOME/Library/Caches:/root/.cache/ \
            -v $(pwd):/work \
            -w /work \
            --attach stderr --attach stdout \
            aquasec/trivy:0.51.1 \
            fs \
              --exit-code 1 \
              --list-all-pkgs \
              --format spdx-json \
              --output artifact/trivy-spdx.json \
              source

      - name: Summarize
        if: (failure())
        run: |
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat artifact/ct222-report.txt >> $GITHUB_STEP_SUMMARY
          cat artifact/trivy.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Report
        if: (success() || failure())
        run: |
          cat artifact/trivy.txt

      - name: Record Artifacts
        uses: actions/upload-artifact@v4
        if: (success() || failure())
        with:
          name: ${{ inputs.output_prefix }}trivy
          path: artifact/*

      - name: Cleanup workspace
        run: sudo rm -rf ..?* .[!.]* *
